{"version":3,"sources":["components/Document/Document.js","components/App/app.style.js","components/App/App.js","index.js"],"names":["PdFDocument","setLoading","useState","products","setProducts","useEffect","fetchFunction","a","axios","method","url","response","data","categories","Array","from","Set","map","product","category","console","log","styles","StyleSheet","create","PageContent","display","flexDirection","width","color","LinkContainer","justifyContent","alignItems","ProductsContainer","textAlign","margin","ProductsContainerH1","textDecoration","fontSize","textTransform","ProductTitleContainer","flexWrap","ProductTitleContainerH2","ProductTitleContainerH3","marginRight","ProductContent","padding","style","backgroundColor","type","index","id","sort","b","price","title","toFixed","description","tag","join","_id","PDFDownloadLinkStyled","styled","PDFDownloadLink","props","disabled","css","App","loading","height","document","fileName","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4daac9a3.chunk.js","sourcesContent":["import { Document, Page, StyleSheet, Text, View } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\n\nconst PdFDocument = ({ setLoading }) => {\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchFunction = async () => {\n      const response = await axios({\n        method: \"GET\",\n        url: \"https://backend20h20.herokuapp.com/api/products/getall\",\n      });\n\n      setProducts(response.data.products);\n      setLoading(false);\n    };\n    fetchFunction();\n  }, []);\n\n  const categories = Array.from(\n    new Set(products.map((product) => product.category))\n  );\n\n  console.log(products);\n\n  const styles = StyleSheet.create({\n    PageContent: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      width: \"100%\",\n      color: \"white\",\n    },\n    LinkContainer: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    ProductsContainer: {\n      width: \"100%\",\n      textAlign: \"left\",\n      margin: \"12px\",\n    },\n    ProductsContainerH1: {\n      textDecoration: \"underline\",\n      fontSize: \"22px\",\n      textTransform: \"uppercase\",\n      textAlign: \"center\",\n    },\n    ProductTitleContainer: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    },\n\n    ProductTitleContainerH2: {\n      textAlign: \"left\",\n      fontSize: \"20px\",\n      textTransform: \"uppercase\",\n    },\n\n    ProductTitleContainerH3: {\n      fontSize: \"20px\",\n      textAlign: \"right\",\n      marginRight: \"40px\",\n    },\n    ProductContent: {\n      fontSize: \"15px\",\n      width: \"80%\",\n      textAlign: \"left\",\n      padding: \"8px 0px\",\n    },\n  });\n  return (\n    <Document>\n      <Page style={{ backgroundColor: \"#696969\" }}>\n        <View style={styles.PageContent}>\n          {categories.map(\n            (type, index) =>\n              type !== \"suggestions\" && (\n                <View key={index} id={type} style={styles.ProductsContainer}>\n                  <Text style={styles.ProductsContainerH1}>\n                    {type === \"antipasti\" ? \"Coté Apéro\" : type}\n                  </Text>\n                  {products\n                    .sort((a, b) => (a.price > b.price ? 1 : -1))\n                    .map(\n                      (product) =>\n                        product[\"category\"] === type && (\n                          <View\n                            key={product._id}\n                            style={styles.ProductsContainer}\n                          >\n                            <View style={styles.ProductTitleContainer}>\n                              <Text style={styles.ProductTitleContainerH2}>\n                                {product.title}\n                              </Text>\n                              <Text style={styles.ProductTitleContainerH3}>\n                                {product.price.toFixed(2)} <small>€</small>\n                              </Text>\n                            </View>\n                            {type !== \"pasta\" && (\n                              <Text style={styles.ProductContent}>\n                                {product.description}\n                              </Text>\n                            )}\n                            {(type === \"champagnes\" || type === \"vins\") && (\n                              <Text style={styles.ProductContent}>\n                                {product.tag\n                                  .sort((a, b) => (a > b ? 1 : -1))\n                                  .join(\", \")}\n                              </Text>\n                            )}\n                          </View>\n                        )\n                    )}\n                </View>\n              )\n          )}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default PdFDocument;\n","import { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport styled from \"styled-components\";\nimport { css } from \"styled-components\";\n\nconst isLoading = (props) => {\n  if (props.disabled) {\n    return css`\n      background-color: grey;\n      cursor: default;\n    `;\n  }\n};\n\nexport const PDFDownloadLinkStyled = styled(PDFDownloadLink)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 25px auto;\n  width: 50%;\n  border: 5px solid black;\n  background-color: blue;\n  color: white;\n  text-decoration: none;\n  ${isLoading}\n`;\n","import { PDFViewer } from \"@react-pdf/renderer\";\nimport React, { useState } from \"react\";\nimport PdfDocucment from \"../Document/Document\";\nimport { PDFDownloadLinkStyled } from \"./app.style\";\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  return (\n    <div style={{ height: \"100vh\" }}>\n      <PDFDownloadLinkStyled\n        disabled={loading}\n        document={<PdfDocucment setLoading={setLoading} />}\n        fileName=\"carte-20hvin.pdf\"\n      >\n        {loading ? \"Loading\" : \"Telecharger\"}\n      </PDFDownloadLinkStyled>\n      <PDFViewer width=\"100%\" height=\"100%\">\n        <PdfDocucment setLoading={setLoading} />\n      </PDFViewer>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}